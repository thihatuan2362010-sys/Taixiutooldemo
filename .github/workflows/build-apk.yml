name: Build Flutter APK (Debug)

on:
  workflow_dispatch: {}   # Chạy thủ công khi bạn bấm Run workflow

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java (JDK 17)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'   # lấy bản Flutter stable mới nhất

      # (Tùy chọn) Cài Android SDK nền tảng mới để build mượt
      - name: Install Android SDK components
        run: |
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"

      - name: Create Flutter project
        run: |
          flutter --version
          flutter create taixiu_app
          cd taixiu_app
          # Ghi đè lib/main.dart bằng code app Tài/Xỉu (dữ liệu giả lập)
          cat > lib/main.dart << 'EOF'
import 'dart:math';
import 'package:flutter/material.dart';

void main() {
  runApp(const TaiXiuApp());
}

class TaiXiuApp extends StatelessWidget {
  const TaiXiuApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Tài Xỉu Stats',
      theme: ThemeData(
        colorScheme: ColorScheme.fromSeed(seedColor: Colors.blue),
        useMaterial3: true,
      ),
      home: const TaiXiuScreen(),
    );
  }
}

class TaiXiuScreen extends StatefulWidget {
  const TaiXiuScreen({super.key});

  @override
  State<TaiXiuScreen> createState() => _TaiXiuScreenState();
}

class _TaiXiuScreenState extends State<TaiXiuScreen> {
  int taiCount = 0;
  int xiuCount = 0;

  void _generateRandomData() {
    final random = Random();
    setState(() {
      taiCount = random.nextInt(100);
      xiuCount = 100 - taiCount;
    });
  }

  @override
  void initState() {
    super.initState();
    _generateRandomData(); // load dữ liệu ban đầu
  }

  @override
  Widget build(BuildContext context) {
    double total = (taiCount + xiuCount).toDouble();
    double taiPercent = total > 0 ? (taiCount / total) * 100 : 0;
    double xiuPercent = total > 0 ? (xiuCount / total) * 100 : 0;

    return Scaffold(
      appBar: AppBar(
        title: const Text("Tỷ lệ Tài / Xỉu"),
        centerTitle: true,
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Text("Tài: ${taiPercent.toStringAsFixed(1)}%",
                style: const TextStyle(fontSize: 24, fontWeight: FontWeight.bold)),
            const SizedBox(height: 12),
            Text("Xỉu: ${xiuPercent.toStringAsFixed(1)}%",
                style: const TextStyle(fontSize: 24, fontWeight: FontWeight.bold)),
            const SizedBox(height: 28),
            FilledButton(
              onPressed: _generateRandomData,
              child: const Text("Làm mới dữ liệu"),
            ),
          ],
        ),
      ),
    );
  }
}
EOF
          flutter pub get

      # Build APK dạng debug (cài đặt được ngay, không cần ký release)
      - name: Build APK (debug)
        run: |
          cd taixiu_app
          flutter build apk --debug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug.apk
          path: taixiu_app/build/app/outputs/flutter-apk/app-debug.apk
